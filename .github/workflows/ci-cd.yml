name: ci-cd-pipeline

on:
  push:
    branches:
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: |
          # Add build commands here
          echo "Building the application..."
          mkdir -p artifacts
          echo "Some important build output" > artifacts/build_output.txt
      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: artifacts
  deploy_dev:
    runs-on: ubuntu-latest
    needs: build
    #if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: build
      - name: Deploy to Dev
        run: |
          # Use the build artifacts in deployment
          cat build/build_output.txt
          # Add deployment commands for Dev environment
  deploy_qa:
    runs-on: ubuntu-latest
    needs: deploy_dev
   # if: github.event_name == 'push' && github.ref == 'refs/heads/qa'

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: build

      - name: Deploy to QA
        run: |
          # Use the build artifacts in deployment
          cat build/build_output.txt
          # Add deployment commands for QA environment
  deploy_to_staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to Staging
        run: |
          # Add deployment commands for staging environment

  approval:
    runs-on: ubuntu-latest
    needs: deploy_to_staging
  
    steps:
       - name: Request Approval
         uses: softprops/action-gh-release@v1
         with:
           #files:
           #- ./path/to/staging-artifact.zip
           tag_name: staging
           title: Request Approval for Staging Deployment
           body: |
            The staging deployment is ready for approval.
  deploy_prod:
    runs-on: ubuntu-latest
    needs: deploy_qa
    #if: github.event_name == 'workflow_run' && github.event.workflow == 'CI/CD Workflow' && github.event.workflow_run.event == 'push' && github.event.workflow_run.branch == 'main'

    steps:
      - name: Deploy to Prod
        run: |
  create_release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Get Tag Name
        id: get_tag
        run: echo "::set-output name=tag::$(git tag --points-at ${{ github.sha }})"

      - name: Get Release Body
        id: get_release_body
        run: echo "::set-output name=body::$(git log --format=%B -n 1 ${{ github.sha }})"

      - name: Create Release
        run: |
          tag="${{ steps.get_tag.outputs.tag }}"
          body="${{ steps.get_release_body.outputs.body }}"
          token="${{ secrets.GITHUB_TOKEN }}"
          
          response=$(curl -X POST \
            -H "Authorization: token $token" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d "{\"tag_name\":\"$tag\",\"body\":\"$body\"}")

          echo "Release created: $response"
