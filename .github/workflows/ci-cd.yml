name: ci-cd-pipeline

on:
  push:
    branches:
      - 'master'
      - 'dev'
      - 'qa'
      - 'prod'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: |
          # Add build commands here
          echo "Building the application..."
          mkdir -p artifacts
          echo "Some important build output" > artifacts/build_output.txt
      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: artifacts
  deploy_dev:
    runs-on: ubuntu-latest
    needs: build
    #if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: build
      - name: Deploy to Dev
        run: |
          # Use the build artifacts in deployment
          cat build/build_output.txt
          # Add deployment commands for Dev environment
  deploy_qa:
    runs-on: ubuntu-latest
    needs: deploy_dev
   # if: github.event_name == 'push' && github.ref == 'refs/heads/qa'

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: build

      - name: Deploy to QA
        run: |
          # Use the build artifacts in deployment
          cat build/build_output.txt
          # Add deployment commands for QA environment
  deploy_prod:
    runs-on: ubuntu-latest
    needs: deploy_qa
    #if: github.event_name == 'workflow_run' && github.event.workflow == 'CI/CD Workflow' && github.event.workflow_run.event == 'push' && github.event.workflow_run.branch == 'main'

    steps:
      - name: Deploy to Prod
        run: |
